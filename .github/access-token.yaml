origin: aloshy-ai/.github-access-token # e.g. qoomon/.github-access-token

# Configure which subjects are allowed to request an access token.
allowed-subjects:
  - 'repo:aloshy-ai/*:**' # Default
#
# === Allowed Subject Pattern Wildcards ===
#
# '*' - match every character except ':'
# ':**' - match every following claim, can only be used at the end of a subject pattern

# Configuration which permissions are allowed to be managed by the repositories themselves
allowed-repository-permissions: # https://docs.github.com/en/rest/authentication/permissions-required-for-github-apps
  # === Repository permissions ===
  #
  actions: write # read or write
  actions-variables: write # read or write
  administration: write # read or write - BE AWARE 'administration' scope can not be completely limited to a repository e.g. create new repositories is still possible
  checks: write # read or write
  codespaces: write # read or write
  codespaces-lifecycle-admin: write # read or write
  codespaces-metadata: write # read or write
  codespaces-secrets: write # write
  contents: write # read or write
  custom-properties: write # read or write
  dependabot-secrets: write # read or write
  deployments: write # read or write
  discussions: write # read or write
  environments: write # read or write
  issues: write # read or write
  merge-queues: write # read or write
  packages: write # read or write
  pages: write # read or write
  projects: write # read or write or admin
  pull-requests: write # read or write
  repository-advisories: write # read or write
  repository-hooks: write # read or write
  repository-projects: write # read or write or admin
  secret-scanning-alerts: write # read or write
  secrets: write # read or write
  security-events: write # read or write
  statuses: write # read or write
  team-discussions: write # read or write
  vulnerability-alerts: write # read or write
  workflows: write # only write

# Grant owner scoped permissions (owner permission or owner wide repository permissions)
# NOTE: Every statement will always implicitly grant `metadata: read` permission.
statements:
  - subjects:
    # === Subject Pattern examples ===
    #
    # grant access to jobs running on the main branch
    - repo:${origin}:ref:refs/heads/main
    # grant access jobs running on any tag starting with a v
    - repo:${origin}:ref:refs/tags/v*
    # grant access to jobs using production environment
    - repo:${origin}:environment:production
    # grant access to jobs of a specific workflow file
    - repo:${origin}:workflow_ref:${origin}/.github/workflows/workflow.yml@refs/heads/main

    # === Subject Pattern Variables and Wildcards ===
    #
    # ${origin} - resolves to the origin repository name e.g. qoomon/sandbox
    # '*' - match every character except ':'
    # ':**' - match every following claim, can only be used at the end of a subject pattern

    # === GitHub Actions OIDC Token Subjects ===
    #
    # A GitHub Actions job will always have the following subjects
    # The original OIDC token 'sub' claim e.g. repo:${origin}:ref:refs/heads/main or repo:${origin}:environment:production
    # repo:${origin}:ref:<ref> e.g. repo:${origin}:ref:refs/heads/main
    # repo:${origin}:environment:<environment> e.g. repo:${origin}:environment:production
    # repo:${origin}:workflow_ref:<workflow_ref> e.g. repo:${origin}:workflow_ref:${origin}/.github/workflows/build.yml@refs/heads/main
    # repo:${origin}:job_workflow_ref:<job_workflow_ref> e.g. repo:${origin}:job_workflow_ref:${origin}/.github/workflows/build.yml@refs/heads/main

    permissions: # https://docs.github.com/en/rest/authentication/permissions-required-for-github-apps
      # === Organization permissions ===
      members: write # read or write
      organization-actions-variables: write # read or write
      organization-administration: write # read or write
      organization-announcement-banners: write # read or write
      organization-codespaces: write # read or write
      organization-codespaces-secrets: write # read or write
      organization-codespaces-settings: write # read or write
      organization-copilot-seat-management: write # read or write
      organization-custom-org-roles: write # read or write
      organization-custom-properties: write # read or write or admin
      organization-custom-roles: write # read or write
      organization-dependabot-secrets: write # read or write
      organization-events: write # only read
      organization-hooks: write # read or write
      organization-personal-access-token-requests: write # read or write
      organization-personal-access-tokens: write # read or write
      organization-plan: write # only read
      organization-projects: write # read or write or admin
      organization-secrets: write # read or write
      organization-self-hosted-runners: write # read or write
      organization-user-blocking: write # read or write

      # === Repository permissions ===
      #
      actions: write # read or write
      actions-variables: write # read or write
      administration: write # read or write - BE AWARE 'administration' scope can not be completely limited to a repository e.g. create new repositories is still possible
      checks: write # read or write
      codespaces: write # read or write
      codespaces-lifecycle-admin: write # read or write
      codespaces-metadata: write # read or write
      codespaces-secrets: write # write
      contents: write # read or write
      custom-properties: write # read or write
      dependabot-secrets: write # read or write
      deployments: write # read or write
      discussions: write # read or write
      environments: write # read or write
      issues: write # read or write
      merge-queues: write # read or write
      packages: write # read or write
      pages: write # read or write
      projects: write # read or write or admin
      pull-requests: write # read or write
      repository-advisories: write # read or write
      repository-hooks: write # read or write
      repository-projects: write # read or write or admin
      secret-scanning-alerts: write # read or write
      secrets: write # read or write
      security-events: write # read or write
      statuses: write # read or write
      team-discussions: write # read or write
      vulnerability-alerts: write # read or write
      workflows: write # only write